definitions:
  accountPassword.AccountPassword:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      password:
        type: string
      service:
        type: string
      updatedAt:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  user.AuthenticationInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /accountPassword:
    get:
      consumes:
      - application/json
      description: get all accounts passwords
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/accountPassword.AccountPassword'
            type: array
      summary: get all accounts passwords
      tags:
      - AccountPassword
    patch:
      consumes:
      - application/json
      description: get edit account password
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/accountPassword.AccountPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountPassword.AccountPassword'
      summary: edit account password
      tags:
      - AccountPassword
    post:
      consumes:
      - application/json
      description: create a new account password
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/accountPassword.AccountPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountPassword.AccountPassword'
      summary: create a new account password
      tags:
      - AccountPassword
  /accountPassword/{serviceName}:
    delete:
      consumes:
      - application/json
      description: delete account password
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountPassword.AccountPassword'
      summary: delete account password
      tags:
      - AccountPassword
    get:
      consumes:
      - application/json
      description: account password by service name
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountPassword.AccountPassword'
      summary: get account password by service name
      tags:
      - AccountPassword
  /auth/login:
    post:
      consumes:
      - application/json
      description: login a user
      parameters:
      - description: payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.AuthenticationInput'
      produces:
      - application/json
      responses: {}
      summary: login a user
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: register a new user
      parameters:
      - description: payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.AuthenticationInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      summary: register a new user
      tags:
      - Authentication
swagger: "2.0"
